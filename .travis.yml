language: node_js
# At this time, the travis trusty sudo environment works, but the sudo: false
# environment doesn't (it might with a bunch of apt packages).
sudo: required
dist: xenial

node_js:
  - 12

addons:
  # version 55.0 - 57.x have an issue with screenshots.
  # version 67.0 has an issue with touch events.
  # firefox: 66.0.5
  firefox: latest
  # We can change to a specific version of Chrome later.  Versions 68 - 70 have
  # an issue with webgl fallback rendering.
  chrome: stable
  apt:
    packages:
      - optipng

cache:
  directories:
    - node_modules
    - "$HOME/cache"
    - "$TRAVIS_BUILD_DIR/dist/data"

before_install:
  # Start xvfb with a specific resolution and pixel depth
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x24"
  - npm install -g npm@latest
  # Prune the npm packages.  If this fails for any reason, just remove them all
  - npm prune || rm -r node_modules
  # Get a specific version of Chrome.
  # - CHROME_VERSION=67.0.3396.79
  # - if ! [ -f "${HOME}/cache/chrome64_${CHROME_VERSION}.deb" ]; then curl -L "https://www.slimjet.com/chrome/download-chrome.php?file=lnx%2Fchrome64_${CHROME_VERSION}.deb" -o "${HOME}/cache/chrome64_${CHROME_VERSION}.deb"; fi
  # - sudo dpkg -i "${HOME}/cache/chrome64_${CHROME_VERSION}.deb"
  - google-chrome --version

install:
  - npm install
  - npm list || true
  # Install for the website build
  - npm run setup-website

before_script:
  - export DISPLAY=:99.0

script:
  - npm run ci
  # Build the website to ensure that it will pass
  - npm run ci-build-website

after_failure:
  # Upload test results.  First make them smaller with optipng.
  - pip install --user --upgrade 'girder-client<3.1' requests[security] pyOpenSSL six
  - find images -name '*-test.png' -exec optipng {} \+ || true
  - find images -name '*-test.png' -exec python scripts/upload_travis_results.py {} \+ || true
  # Upload build artifacts
  - find dist/built -type f -exec python scripts/upload_travis_results.py {} \+ || true
  # Generate a new set of baseline images, in case we decide the new results
  # are now correct
  - rm -r dist/data/base-images 2>/dev/null >/dev/null || true
  - python tests/runners/baseline_images.py -cgvb images
  - find images -name 'Baseline Images*.tgz' -exec python scripts/upload_travis_results.py {} \+ || true

after_success:
  # - find dist \( -name '*coverage*xml' -o -name 'lcov.info' \) -exec ls -al {} \+ || true
  # - npm run codecov
  - bash <(curl -s https://codecov.io/bash)
  # Upload build artifacts
  - pip install --user --upgrade 'girder-client<3.1' requests[security] pyOpenSSL six
  - find dist/built -type f -exec python scripts/upload_travis_results.py {} \+

deploy:
  - provider: pages
    local-dir: website/public
    github-token: $GITHUB_TOKEN
    skip-cleanup: true
    on:
      branch: master
  - provider: releases
    api_key: $GITHUB_TOKEN
    file:
      - dist/built/geo.js
      - dist/built/geo.min.js
      - dist/built/geo.lean.js
      - dist/built/geo.lean.min.js
    skip-cleanup: true
    on:
      tags: true
      # We could emit artifacts on all branches rather than just master
      branch: master
      # all_branches: true
  - provider: npm
    api_key: $NPM_TOKEN
    email: david.manthey@kitware.com
    skip-cleanup: true
    script: "npm publish"
    on:
      tags: true
